on:
  repository_dispatch:
    types: publish

jobs:
  update_changelog_and_sync_package_lock_version:
    name: Update CHANGELOG.md and make sure package.json and package-lock.json versions matches.
    runs-on: ubuntu-latest
    steps:
    - name: Synchronize package.json  and package-lock.json version if needed.
      uses: garronej/github_actions_toolkit@v1.4
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }} 
      with:
        action_name: sync_package_and_package_lock_version
        owner: ${{github.repository_owner}}
        repo: ${{github.event.client_payload.repo}}
        branch: develop
        commit_author_email: denoify_ci@github.com
    - name: Update CHANGELOG.md
      if: ${{ !!github.event.client_payload.from_version }}
      uses: garronej/github_actions_toolkit@v1.4
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }} 
      with:
        action_name: update_changelog
        owner: ${{github.repository_owner}}
        repo: ${{github.event.client_payload.repo}}
        branch_behind: master
        branch_ahead: develop
        commit_author_email: denoify_ci@github.com
        exclude_commit_from_author_names_json: '["denoify_ci"]'
      
  publish_npm:
    runs-on: ubuntu-latest
    needs: update_changelog_and_sync_package_lock_version
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
    - run: npm ci
    - run: npm run enable_short_import_path:npm
      env:
        DRY_RUN: "0"
    - name: (DEBUG) Show how the files have been moved to enable short import
      run: ls -lR
    - name: Publishing on NPM
      run: |
        if [ "$(npm show $MODULE_NAME version)" = "$VERSION" ]; then
          echo "This version is already published"
          exit 0
        fi
        if [ "$NPM_TOKEN" = "" ]; then
          echo "Can't publish on NPM, You must first create a secret called NPM_TOKEN that contains your NPM auth token. https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets"
          false
        fi
        echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
        npm publish
        rm .npmrc
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        MODULE_NAME: ${{ github.event.client_payload.repo }}
        VERSION: ${{ github.event.client_payload.to_version }}
  publish_deno:
    runs-on: ubuntu-latest
    needs: update_changelog_and_sync_package_lock_version
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: develop
    - name: Remove .github directory, useless on 'master' branch
      run: rm -r .github
    - name: Remove branch 'master' 
      continue-on-error: true
      run: |
        git branch -d master || true
        git push origin :master
    - name: Create the new 'master' branch
      run: |
        git branch master
        git checkout master
    - uses: actions/setup-node@v1
    - run: npm ci
    - run: npm run enable_short_import_path:deno
      env:
        DRY_RUN: "0"
    - name: Commit changes
      run: |
        git config --local user.email "denoify_ci@github.com"
        git config --local user.name "denoify_ci"
        git add -A
        git commit -am "[automatic] Moving files to enable shorter import paths"
    - run: git push origin master
    - name: Release body
      id: id_rb
      run: |
        if [ "$FROM_VERSION" = "" ]; then
            echo "::set-output name=body::ðŸš€"
        else
            echo "::set-output name=body::ðŸ“‹ [CHANGELOG](https://github.com/$OWNER/$REPO/blob/$REF/CHANGELOG.md)"
        fi
      env: 
        FROM_VERSION: ${{ github.event.client_payload.from_version }}
        OWNER: ${{github.repository_owner}}
        REPO: ${{github.event.client_payload.repo}}
        REF: ${{github.event.client_payload.to_version}}
    - name: Create Release
      uses: garronej/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }} 
      with:
        tag_name: ${{ github.event.client_payload.to_version }}
        release_name: Release ${{ github.event.client_payload.to_version }}
        branch: master
        body: ${{ steps.id_rb.outputs.body }}
        draft: false
        prerelease: false
  add_to_deno_land_third_party_module_register:
    runs-on: ubuntu-latest
    needs: publish_deno
    steps:
    - name: Create a PR on denoland/deno_website2 to add ${{github.event.client_payload.repo}} if not already done.
      id: id1
      uses: garronej/github_actions_toolkit@v1.4
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }} 
      with:
        action_name: submit_module_on_deno_land
        owner: ${{github.repository_owner}}
        repo: ${{github.event.client_payload.repo}}
        commit_author_email: 'denoify_ci@github.com'
    - name: "Print outcome"
      env:
        WAS_ALREADY_PUBLISHED: ${{ steps.id1.outputs.was_already_published }}
      run: |
       if [ "$WAS_ALREADY_PUBLISHED" = "true" ]; then
         echo "The module is already published, if you can't see it yet it means that the PR hasn't been merged yet. See https://github.com/denoland/deno_website2/pulls"
         false
       fi
       echo "A pull request has been issued to add the module: https://github.com/denoland/deno_website2/pulls"
