# name: ci

# on:
#   - push
#   - pull_request


# jobs:
#   build:
#     runs-on: ubuntu-16.04
#     strategy:
#       matrix:
#         node: [ '10', '8' ]
#     name: Node ${{ matrix.node }} sample
#     steps:
#       - uses: actions/checkout@v2
#       - name: Setup node
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node }}
#       - run: npm install
#       - run: npm test

# jobs:
#   build: 
#   test:
#     runs-on: ubuntu-16.04
#     strategy:
#       matrix:
#         deno: 0.x
#     name: Deno ${{ matrix.deno }} sample
#     steps:
#       - uses: actions/checkout@master
#       - name: Cache
#         uses: actions/cache@v1
#         with:
#           path: ~/.cache/deno
#           key: deno-${{ runner.os }}-${{ hashFiles('deno-lock.json') }}
#           restore-keys: |
#             deno-${{ runner.os }}-${{ hashFiles('deno-lock.json') }}
#             deno-${{ runner.os }}-
#             deno-
#       - name: Setup Deno
#         uses: denolib/setup-deno@master
#         with:
#           deno-version: ${{ matrix.deno }}
#       - run: deno run https://deno.land/std/examples/welcome.ts


# on:
#   push:
#     branches:
#       - master
#       - next
#       - beta
#       - "*.x" # maintenance releases such as 15.x
# 
# name: Release
# jobs:
#   build:
#     name: release
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - uses: actions/setup-node@v1
#         with:
#           node-version: "12.x"
#       - run: npm ci
#       - run: npm run build
#       - run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}



name: Initial setup
on: [push, pull_request,check_run,check_suite,create,delete,deployment,fork,gollum,label]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
  test-node:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
  test-deno:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    